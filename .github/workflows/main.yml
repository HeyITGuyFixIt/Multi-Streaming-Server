# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Prep Environment
      run: |
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        sudo apt update
        sudo apt upgrade -y
        sudo apt autoremove -y
    - name: Build Multi-Streaming-Server
      run: |
        mv nginx/conf/nginx.template.conf nginx/conf/nginx.conf
        sed -i -e 's/{{ stream_key }}/X-XX-XXX-XXXX-XXXXX-XXXXXX/g' nginx/conf/nginx.conf
        sed -i -e 's/{{ youtube_key }}/XXXX-XXXX-XXXX-XXXX/g' nginx/conf/nginx.conf
        sed -i -e 's/{{ facebook_key }}/XXXXXXXXXXXXXXX\?s_bl=1\&s_ps=1\&s_sw=0\&s_vt=api-s\&a=XXX-XXXXXXXXXXXX/g' nginx/conf/nginx.conf
        sed -i -e 's/{{ twitch_key }}/live_00000000_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/g' nginx/conf/nginx.conf
        sed -i -e 's/{{ dailymotion_key }}/XXXXXXX?auth=XXXX_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/g' nginx/conf/nginx.conf
        sed -i -e 's/{{ hitbox_key }}/noxalus?key=XXXXXXXX/g' nginx/conf/nginx.conf
        chmod +x bootstrap.sh
        sudo ./bootstrap.sh
    - name: Upload conf
      uses: actions/upload-artifact@v1.0.0
      with:
        name: conf-${{ matrix.os }}
        path: /usr/local/nginx/conf
    - name: Upload Nginx log
      uses: actions/upload-artifact@v1.0.0
      with:
        name: nginx-log-${{ matrix.os }}
        path: /usr/local/nginx/logs
    - name: Upload Stunnel4 log
      uses: actions/upload-artifact@v1.0.0
      with:
        name: stunnel-log-${{ matrix.os }}
        path: /var/log/stunnel4/stunnel.log
    - name: Check for issues
      continue-on-error: true
      run: |
        if [ ! -e /usr/local/nginx/conf/nginx.conf ]; then
          echo nginx.conf does not exist
          exit 1
        else
          cat nginx/conf/nginx.conf
        fi
        if [ ! -e /usr/local/nginx/conf/mime.types ]; then
          echo mime.types does not exist
          exit 1
        fi
        if [ -e /usr/local/nginx/logs/error.log ]; then
          echo An error log was generated
          exit 1
        fi
